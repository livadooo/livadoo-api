name: Build docker image and push to ACR
run-name: Deploying from ${{ github.actor }} PR
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build container image and push to ACR
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jib
            -PlivadooDockerRegistrySnapshotsUrl=${{ vars.DOCKER_REGISTRY_SERVER_URL }}/docker-registry-snapshots/livadoo-api
            -PlivadooDockerRegistryReleasesUrl=N/A
            -PlivadooDockerRegistryUsername=${{ vars.DOCKER_REGISTRY_SERVER_USERNAME }}
            -PlivadooDockerRegistryPassword=${{ secrets.DOCKER_REGISTRY_SERVER_PASSWORD }}
            -PbuildVersionNumber=${{ github.sha }}
            -Porg.gradle.parallel=true
            -PdatasourceUrl=N/A
            -PdatabaseUserName=N/A
            -PdatabasePassword=N/A
            -PappProfile=dev

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: '${{ vars.DOCKER_REGISTRY_SERVER_URL }}/docker-registry-snapshots/livadoo-api:latest'
